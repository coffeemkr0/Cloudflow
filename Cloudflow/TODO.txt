Get a real status of what an agent is doing

Make it so that runs have a configurable name format that is generated when the run starts (similar to Tfs builds)

Use a ViewModel for agent configurations instead of using the model directly from the Core assembly

Triggers starting other triggers:
	For example, a trigger that watches for folders being created in a watch folder
	This trigger being fired Starts another trigger that watches for files that are created in the new folder
	This file watcher trigger getting fired starts a run
	This sounds like having dynamically created triggers

Trigger examples:
	Watch folder
	Monitor an email account
	A WCF or SignalR service that listens for Http requests
	Poll a database
	Fire an event from Sql Server that fires the trigger (not polling)

Add an option to steps for continuing after errors
Keep a history of runs and their logs and status etc.

start making methods extensible

Enable the agent to run as a windows server


Authenitcaiton - create a user account and only access "my stuff"
Ability to add, edit and remove Agents
Download the job and an agent to a "worker PC"
Start the job from the web page
Monitor progress from the web page to know when the work is done



Ability to setup "jobs" - Jobs being the settings that are required for the agent to know what to do:
	1. Input folder that contains the jpegs
	2. Output folder to place the pdfs



