Run Management
	Add the ability for runs to be queued instead of starting immediately
	Add the ability to cancel a run

Allow steps to have child steps (tree structure)
	The UI for the configuration of this might get messy

Add a Completion property to steps (or something)
	Some sort of extension to call when a step completes that allows redirection of the workflow (to a specific step for example)
	Needs more thought - basically this needs to cover the ability for steps to be skipped or repeated



Add a job selection screen - currently hard coded to default job and default extensions path

Publishing jobs needs attention
	If a job is deleted, it is not removed from agents
	Need to handle cases where agents are not running or not reachable
	Need to be able to see what version of a job is currently running on an agent
	Possibly just change this to a Update Agents function to update all agents with the current version of each job

Handle compex properties
Allow grouping of configuration properties

Fancify the UI
	Saving job - make it an ajax call so it will keep focus on wherever it is
	Fancy confirmations

BEMify class names and ids. Refactor views, and scripts.


Need to at least throw a custom exception when no extension is found - could possibly switch to [Import] instead of [ImportMany] or
find the attribute value that specifies at least one must be found.

It's taking a few seconds to create DbContexts the first time, both on the server and agent.

Look at not creating a run controller every time a trigger is fired. 
A dedicated thread for working on runs in a queue might be better. 
This could still allow jobs to trigger multiple runs asynchronously but would give the ability to limit the numer of runs in progress.

Create a view of what the agent is actually doing to expand on the Running status.

Allow jobs, triggers and steps to perform impersonation
	Need to store the credentials on the agent host, not on the web server
	Check out the Options on Tfs builds - Allow Scripts to Access OAuth Token

Sign everything so that it is trusted

Make it so that runs have a configurable name format that is generated when the run starts (similar to Tfs builds)

Triggers starting other triggers:
	For example, a trigger that watches for folders being created in a watch folder
	This trigger being fired Starts another trigger that watches for files that are created in the new folder
	This file watcher trigger getting fired starts a run
	This sounds like having dynamically created triggers

Trigger examples:
	Watch folder
	Monitor an email account
	A WCF or SignalR service that listens for Http requests
	Poll a database
	Fire an event from Sql Server that fires the trigger (not polling)

Add an option to steps for continuing after errors
Enable the agent to run as a windows service
Authenitcaiton - create a user account and only access "my stuff"